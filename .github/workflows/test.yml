---

# Ref: https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name:  Build and test github action container image

on:
    pull_request:
        branches: [master]

env:
    _TEST_IMAGE: ${{ github.actor }}_test_image
    _TEST_FQIN: ${{ github.actor }}_test_image:${{ github.sha }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Clone repository
              uses: actions/checkout@master

            - name: Test building container image
              run: docker build -t "${_TEST_FQIN}" .

            - name: Create an images directory
              run: mkdir -vp images

            - name: Save base image to tar files
              run: docker save $(grep "FROM" Dockerfile | cut -d " " -f 2) > images/base_image.tar

            - name: Save built test image to tar files
              run: docker save "${_TEST_FQIN}" > "images/${_TEST_IMAGE}.tar"

            - name: Upload images directory as an artifact
              uses: actions/upload-artifact@master
              with:
                  name: images
                  path: images

    test:
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - name: Download image artifacts
              uses: actions/download-artifact@master
              with:
                  name: images

            - name: Seed container storage from downloaded artifacts
              run: |
                  docker load < "images/base_image.tar"
                  docker load < "images/${_TEST_IMAGE}.tar"

            - name: Remove image artifacts directory
              run: mkdir -vp images

            - name: Clone repository
              uses: actions/checkout@master

            - name: Test container tools execute within a container
              uses: ./
              with:
                  args: versions

            - name: Test ${{ github.repository }} action behavior (produce artifact)
              uses: ./
              with:
                  args: set_artifact
                  artifacts_dirpath: fooptyboopty

            - name: Test upload artifacts directory
              uses: actions/upload-artifact@master
              with:
                  name: artifacts
                  path: fooptyboopty

            - name: Test download artifacts directory
              uses: actions/download-artifact@master
              with:
                  name: artifacts
                  path: booptyfoopty

            - name: Test ${{ github.repository }} action behavior (consume artifact)
              uses: ./
              with:
                  # Sets the env. var 'testing' to 'passed' w/ metadata output
                  args: get_artifact
                  artifacts_dirpath: booptyfoopty

            - name: Validate env. var. setting from ${{ github.repository }} action
              run: test ${testing} == "passed"
